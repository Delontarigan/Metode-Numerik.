{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOxKDsztIRKh2a5B/ziPFbx",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Delontarigan/Metode-Numerik./blob/main/Implementasi%20Sistem%20Persamaan%20Linear\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w9r4SA-YvHy1",
        "outputId": "daabfd06-642a-4571-be77-e21f011e6819"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Matriks Asli:\n",
            "[[1 2]\n",
            " [3 4]]\n",
            "\n",
            "Matriks Balikan:\n",
            "[[-2.   1. ]\n",
            " [ 1.5 -0.5]]\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "\n",
        "# Definisikan matriks\n",
        "A = np.array([[1, 2], [3, 4]])\n",
        "\n",
        "# Menghitung balikan matriks\n",
        "A_inv = np.linalg.inv(A)\n",
        "\n",
        "print(\"Matriks Asli:\")\n",
        "print(A)\n",
        "print(\"\\nMatriks Balikan:\")\n",
        "print(A_inv)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "def lu_decomposition_gauss(A):\n",
        "    n = len(A)\n",
        "    L = np.eye(n)\n",
        "    U = np.copy(A)\n",
        "\n",
        "    for i in range(n):\n",
        "        # Lakukan eliminasi Gauss pada kolom i\n",
        "        for j in range(i + 1, n):\n",
        "            factor = U[j, i] / U[i, i]\n",
        "            L[j, i] = factor\n",
        "            U[j, i:] -= factor * U[i, i:]\n",
        "\n",
        "    return L, U\n",
        "\n",
        "# Contoh penggunaan\n",
        "A = np.array([[2, -1, 3],\n",
        "              [4, 3, -1],\n",
        "              [-2, 1, 4]], dtype=float)\n",
        "\n",
        "L, U = lu_decomposition_gauss(A)\n",
        "print(\"Matriks L:\")\n",
        "print(L)\n",
        "print(\"\\nMatriks U:\")\n",
        "print(U)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WgbdYGNZvZ6O",
        "outputId": "26a609d7-47bb-4440-f7f8-438a61b1f4b4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Matriks L:\n",
            "[[ 1.  0.  0.]\n",
            " [ 2.  1.  0.]\n",
            " [-1.  0.  1.]]\n",
            "\n",
            "Matriks U:\n",
            "[[ 2. -1.  3.]\n",
            " [ 0.  5. -7.]\n",
            " [ 0.  0.  7.]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "def crout_decomposition(A):\n",
        "    n = len(A)\n",
        "    L = np.zeros((n, n))\n",
        "    U = np.zeros((n, n))\n",
        "\n",
        "    for j in range(n):\n",
        "        U[j, j] = 1  # Diagonal utama U adalah 1\n",
        "        for i in range(j, n):\n",
        "            # Hitung nilai U[i, j]\n",
        "            sum_1 = sum(U[k, j] * L[i, k] for k in range(j))\n",
        "            U[i, j] = A[i, j] - sum_1\n",
        "\n",
        "        for i in range(j, n):\n",
        "            # Hitung nilai L[i, j]\n",
        "            if i == j:\n",
        "                L[i, j] = 1  # Diagonal utama L adalah 1\n",
        "            else:\n",
        "                sum_2 = sum(U[k, j] * L[i, k] for k in range(j))\n",
        "                L[i, j] = (A[j, i] - sum_2) / U[j, j]\n",
        "\n",
        "    return L, U\n",
        "\n",
        "# Contoh penggunaan\n",
        "A = np.array([[2, -1, 3],\n",
        "              [4, 3, -1],\n",
        "              [-2, 1, 4]], dtype=float)\n",
        "\n",
        "L, U = crout_decomposition(A)\n",
        "print(\"Matriks L:\")\n",
        "print(L)\n",
        "print(\"\\nMatriks U:\")\n",
        "print(U)"
      ],
      "metadata": {
        "id": "qGQjpoYmvw2s",
        "outputId": "46877173-4b5c-4a33-913e-81081dfa0252",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Matriks L:\n",
            "[[ 1.          0.          0.        ]\n",
            " [-0.5         1.          0.        ]\n",
            " [ 1.5        -0.33333333  1.        ]]\n",
            "\n",
            "Matriks U:\n",
            "[[ 2.  0.  0.]\n",
            " [ 4.  3.  0.]\n",
            " [-2.  1.  4.]]\n"
          ]
        }
      ]
    }
  ]
}